plugins {
    id "org.danilopianini.publish-on-central" version "9.1.0"
    id 'com.github.jk1.dependency-license-report' version '1.16'
    id 'org.cyclonedx.bom' version '1.8.2' apply false
}

// Plugin dependency-license-report
import com.github.jk1.license.filter.ExcludeTransitiveDependenciesFilter
import com.github.jk1.license.render.InventoryMarkdownReportRenderer


ext {
    /*
    module stuff
     */
    driver_ui = project(':driver-ui')
    driver_ui_desktop = project(':driver-ui-desktop')
    core = project(':core')
    report = project(':report-ng')

    seleniumVersion = '4.33.0'
    // Must be the same like in Selenium 4
    // https://github.com/SeleniumHQ/selenium/blob/trunk/java/maven_install.json
    guavaVersion = "33.4.8-jre"

    moduleVersion = '2-SNAPSHOT'
    if (System.properties.containsKey('ttVersion')) {
        moduleVersion = System.getProperty('ttVersion')
    }
}

allprojects {
    group 'io.testerra'
    version moduleVersion

    apply plugin: 'java-library'
    apply plugin: 'project-report'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco-report-aggregation'
    apply plugin: 'signing'
    apply plugin: 'org.danilopianini.publish-on-central'
    apply plugin: 'com.github.jk1.dependency-license-report'
    apply plugin: 'org.cyclonedx.bom'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = "UTF-8"
    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    base.archivesName = "testerra"

    repositories {
        mavenCentral()
    }

    test {

        ignoreFailures = true
        useTestNG()
        testLogging {
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
        options {
            systemProperties(System.getProperties())
        }
    }

    task cleanDist {
        doLast {
            delete "out"
        }
    }

    clean.dependsOn(cleanDist)

    // Plugin dependency-license-report
    licenseReport {
        filters = [new ExcludeTransitiveDependenciesFilter()]
        configurations = ['runtimeClasspath', 'testRuntimeClasspath']
//        renderers = [new CsvReportRenderer("${project.name}.csv"), new InventoryMarkdownReportRenderer("${project.name}.md"), new TextReportRenderer("${project.name.toUpperCase()}.txt") ]
        renderers = [new InventoryMarkdownReportRenderer("${project.name}.md")]
        outputDir = "$rootDir/license3rdparty"
    }

    cyclonedxBom {
        skipProjects = ["docs", "integration-tests", "report-ng", "app", "report-ng-tests"]
        outputFormat = "json"
        outputName = project.name
        destination = file("../build/sbom")
    }

}

// Deactivate JAR publishing for the root project
project.afterEvaluate {
    println "Deactivate publishing for " + project.name
    project.tasks.each { t ->
        if (t.name.startsWith("publish") || t.name.contains("MavenCentral")) {
            t.enabled = false
        }
    }
}
// Do not move this integration because `group` and `version` is needed for publishing
apply from: rootProject.file('publish.gradle')
