/**
 * Maven publishing configuration
 * */

// Maven pom.xml attributes
ext {
    libraryName = 'Testerra'
    libraryDescription = "Testerra test automation framework"

    siteUrl = 'https://testerra.io'
    gitUrl = 'scm:git:git://github.com/telekom/testerra.git'
    gitHttpsUrl = 'https://github.com/telekom/testerra'

    developerId = 'MMS'
    developerName = 'Testerra Team MMS'
    developerEmail = 'testerra@telekom-mms.com'
    developerOrganization = 'Deutsche Telekom MMS GmbH'
    developerOrganizationUrl = 'https://www.telekom-mms.com/'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

allprojects {

    def libraryDescription = "Testerra test automation framework"

    javadoc {
        // Support JDK 8 annotations
        options.tags = [
                "implNote:a:Implementation Note:",
                "apiNote:a:API Note:",
                "implSpec:a:Implementation Requirements:"
        ]
        // Prevent errors during generation
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishOnCentral {
        repoOwner.set("martingrossmann")
        projectDescription.set(rootProject.ext.libraryDescription)

        projectLongName.set(project.name)
        licenseName.set(rootProject.ext.licenseName)
        licenseUrl.set(rootProject.ext.licenseUrl)
        projectUrl.set(rootProject.ext.gitHttpsUrl)
        scmConnection.set(rootProject.ext.gitUrl)
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                // Custom pom
                pom {

                    name = rootProject.ext.libraryName
                    description = rootProject.ext.libraryDescription
                    url = rootProject.ext.siteUrl

                    licenses {
                        license {
                            name = rootProject.ext.licenseName
                            url = rootProject.ext.licenseUrl
                        }
                    }

                    developers {
                        developer {
                            id = rootProject.ext.developerId
                            name = rootProject.ext.developerName
                            email = rootProject.ext.developerEmail
                            organization = rootProject.ext.developerOrganization
                            organizationUrl = rootProject.ext.developerOrganizationUrl
                        }
                    }

                    scm {
                        connection = rootProject.ext.gitUrl
                        developerConnection = rootProject.ext.gitUrl
                        url = rootProject.ext.gitHttpsUrl
                    }
                }
            }
        }

        if (project.version.endsWith("-SNAPSHOT")) {
            repositories {
                maven {
                    url "https://central.sonatype.com/repository/maven-snapshots/"
                    credentials {
                        username System.getenv("MAVEN_CENTRAL_PORTAL_USERNAME")
                        password System.getenv("MAVEN_CENTRAL_PORTAL_PASSWORD")
                    }
                }
            }
        }
    }

    signing {
        def signingKeyId = System.getenv("ORG_GRADLE_PROJECT_signingKeyId")
        def signingKey = System.getenv("ORG_GRADLE_PROJECT_signingKey")
        def signingPassword = System.getenv("ORG_GRADLE_PROJECT_signingPassword")
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        sign publishing.publications.mavenJava
    }

}
